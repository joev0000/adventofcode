; ADVENT OF CODE 2019: DAY 6
; UNIVERSAL ORBIT MAP
;
; THIS PROGRAM CAN BE ASSEMBLED BY PAL-11A AND CAN BE RUN ON ANY
; PDP-11 SYSTEM WITH A HIGH-SPEED PAPER TAPE READER.
;
; INPUT:  PAPER TAPE
; OUTPUT: TTY
;
; START ADDRESS: 1000
;

;
; SET UP REGISTER AND DEVICE LABELS
;
        R0=     %0              ; REGISTER 0
        R1=     %1              ; REGISTER 1
        R2=     %2              ; REGISTER 2
        R3=     %3              ; REGISTER 3
        R4=     %4              ; REGISTER 4
        R5=     %5              ; REGISTER 5
        SP=     %6              ; STACK POINTER
        PC=     %7              ; PROGRAM COUNTER

;
; START OF PROGRAM
;
        .=      1000            ; ASSEMBLE AT ADDRESS 1000
START:  MOV     #.,SP           ; SET UP STACK

        MOV     #DEF,-(SP)
        JSR     PC,STOR50
        ADD     #2,SP


        HALT                    ; END OF PROGRAM
        BR      START           ; START OVER
ABC:    .ASCII /ABC/
DEF:    .ASCII /DEF/
        .EVEN
;
; A LIST OF NODES
; 0: NAME(R50)
; 2: PTR TO PARENT NODE
; 4: DISTANCE FROM ROOT

NODES:  .=      .+16000         ; 1194(10) NODES



;
; STOR50(S)
;
; RETURN THE RADIX 50 VALUE OF THE FIRST THREE CHARS OF S
;
STOR50:
        MOV     R1,-(SP)        ; SAVE R1
        MOV     R2,-(SP)        ; SAVE R2
        MOV     R3,-(SP)        ; SAVE R3

        MOV     10(SP),R2       ; R2 <- S
        MOVB    (R2)+,R3
        MOVB    R50TBL(R3),R0   ; R0 <- S[0]
        ASL     R0              ; R0 <- S[0] * 2
        ASL     R0              ; R0 <- S[0] * 4
        ASL     R0              ; R0 <- S[0] * 10
        MOV     R0,R1           ; R1 <- S[0] * 10
        ASL     R0              ; R0 <- S[0] * 20
        ASL     R0              ; R0 <- S[0] * 40
        ADD     R1,R0           ; R0 <- S[0] * 50

        MOVB    (R2)+,R3
        MOVB    R50TBL(R3),R3
        ADD     R3,R0           ; R0 <- S[0] * 50 + S[1]
        ASL     R0              ; R0 <- (S[0] * 50 + S[1]) * 2
        ASL     R0              ; R0 <- (S[0] * 50 + S[1]) * 4
        ASL     R0              ; R0 <- (S[0] * 50 + S[1]) * 10
        MOV     R0,R1           ; R1 <- (S[0] * 50 + S[1]) * 10
        ASL     R0              ; R0 <- (S[0] * 50 + S[1]) * 20
        ASL     R0              ; R0 <- (S[0] * 50 + S[1]) * 40
        ADD     R1,R0           ; R0 <- (S[0] * 50 + S[1]) * 50

        MOVB    (R2),R3
        MOVB    R50TBL(R3),R3
        ADD     R3,R0

        MOV     (SP)+,R3        ; RESTORE R3
        MOV     (SP)+,R2        ; RESTORE R2
        MOV     (SP)+,R1        ; RESTORE R1
        RTS     PC              ; RETURN TO CALLER
;
; R50TBL: ASCII TO RAD50 TABLE
;         X =  0  1  2  3  4  5  6  7
R50TBL: .BYTE -1,-1,-1,-1,-1,-1,-1,-1  ; 00X
        .BYTE -1,-1,-1,-1,-1,-1,-1,-1  ; 01X
        .BYTE -1,-1,-1,-1,-1,-1,-1,-1  ; 02X
        .BYTE -1,-1,-1,-1,-1,-1,-1,-1  ; 03X
        .BYTE  0,-1,-1,-1,33,35,-1,-1  ; 04X
        .BYTE -1,-1,-1,-1,-1,-1,34,-1  ; 05X
        .BYTE 36,37,40,41,42,43,44,45  ; 06X
        .BYTE 46,47,-1,-1,-1,-1,-1,-1  ; 07X
        .BYTE -1,01,02,03,04,05,06,07  ; 10X
        .BYTE 10,11,12,13,14,15,16,17  ; 11X
        .BYTE 20,21,22,23,24,25,26,27  ; 12X
        .BYTE 30,31,32,-1,-1,-1,-1,-1  ; 13X
        .BYTE -1,-1,-1,-1,-1,-1,-1,-1  ; 14X
        .BYTE -1,-1,-1,-1,-1,-1,-1,-1  ; 15X
        .BYTE -1,-1,-1,-1,-1,-1,-1,-1  ; 16X
        .BYTE -1,-1,-1,-1,-1,-1,-1,-1  ; 17X
